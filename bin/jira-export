#!/usr/bin/env perl

use 5.16.1;
use warnings;

use List::Util 'first';

use JIRA::Client;

my $j = JIRA::Client->new({
   user     => $ENV{JIRA_USER},
   baseurl  => $ENV{JIRA_SITE},
   password => $ENV{JIRA_PASSWORD},
});

my @m = sort_by_version(values %{$j->get_versions('LXS')});

splice @m, 3 if @m > 3;

say(
   render_pri($_) .
   ($_->{created} =~ s/T.*$//r) .
   " $_->{summary} ($_->{key}) " .
   '+lynx +jira @work'
) for
   reverse
   map { $_->[0] }
   sort { $b->[1] cmp $a->[1] }
   map {
      if (my $ret = fix_version($_)) {
         [$_, $ret->{sequence}]
      } else { () }
   }
   $j->filter_issues(q<
      project = LXS AND
      status in ( Open , Resolved )
      AND assignee = currentUser() AND (
        resolution NOT IN ("Won't Fix" , Duplicate, "Cannot Reproduce") OR
        resolution IS EMPTY
      )
   >);

sub render_pri {
   my $i = 0;
   for my $pri (@m) {
      return '(' . chr(65 + $i) . ') ' if fix_version($_[0])->{id} == $pri->{id};
      $i++;
   }
   return '';
}

sub fix_version { (sort_by_version(@{$_[0]->{fixVersions}}))[0] }

sub sort_by_version {
   sort { $a->{sequence} <=> $b->{sequence} }
   grep !$_->{released} && !$_->{archived},
   @_
}
