[TemplateModule/:DefaultModuleMaker]
template = Module.pm

[GenerateFile / Generate-t-basic ]
filename = t/basic.t
content_is_template = 1

content  = #!/usr/bin/env perl
content  =
content  = use strict;
content  = use warnings;
content  =
content  = use Test::More;
content  =
content  = use {{ $dist->name =~ s/-/::/gr }};
content  =
content  = done_Testing;

[GenerateFile / Generate-Changes ]
filename = Changes
content_is_template = 1

content = Release history for {{ '{{ $dist->name }}' }}
content =
content = {{ '{{$NEXT}}' }}
content =
content =  - Initial Release

[GenerateFile / Generate-distini ]
filename = dist.ini
content_is_template = 1

content = name             = {{ $dist->name }}
content = author           = Arthur Axel "fREW" Schmidt <frioux+cpan@gmail.com>
content = license          = Perl_5
content = copyright_holder = Arthur Axel "fREW" Schmidt
content = version          = 0.001000
content =
content = [NextRelease]
content = [@Git]
content = [@Basic]
content = [GithubMeta]
issues = 1
content = [MetaJSON]
content = [PodWeaver]
content = [PkgVersion]
content = [ReadmeFromPod]
content = [PodSyntaxTests]
content = [Prereqs::FromCPANfile]

[GenerateFile / Generate-cpanfile ]
filename = cpanfile
content_is_template = 1

content = requires 'Moo' => 1.003001;
content =
content = on test => sub {
content = {{}}   requires 'Test::More' => 1.001002;
content = };

[GenerateFile / Generate-travis ]
filename = .travis.yml
content_is_template = 1

content = language: perl
content = perl:
content = {{}}   - "5.18"
content = {{}}   - "5.16"
content = {{}}   - "5.14"
content = {{}}   - "5.12"
content = {{}}   - "5.10"
content = {{}}   - "5.8"
content =
content = install:
content = {{}}   - export RELEASE_TESTING=1 AUTOMATED_TESTING=1 AUTHOR_TESTING=1 HARNESS_OPTIONS=j10:c HARNESS_TIMER=1
content = {{}}   - cpanm --quiet --notest Devel::Cover::Report::Coveralls
content = {{}}   - cpanm --quiet --notest --installdeps .
content =
content = script:
content = {{}}   - PERL5OPT=-MDevel::Cover=-coverage,statement,branch,condition,path,subroutine prove -lrsv t
content = {{}}   - cover
content =
content = after_success:
content = {{}}  - cover -report coveralls

[Git::Init]
